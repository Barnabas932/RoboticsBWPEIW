# -*- coding: utf-8 -*-
"""epuck_controller

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zysgxQti0tIF-_ssG74RQMmKYC2rXZ4D
"""

from controller import Robot, Camera, Motor

TIME_STEP = 32

# Inicializáció
robot = Robot()
camera = robot.getDevice('camera')
camera.enable(TIME_STEP)

left_motor = robot.getDevice('left wheel motor')
right_motor = robot.getDevice('right wheel motor')

left_motor.setPosition(float('inf'))
right_motor.setPosition(float('inf'))

left_motor.setVelocity(0.0)
right_motor.setVelocity(0.0)

# Paraméterek
FORWARD_SPEED = 3.0
TURN_SPEED = 2.0
STOP_DISTANCE = 20  # pixel érték, kb. mennyire legyen középen a labda
OBSTACLE_THRESHOLD = 80  # proximity érték, ami felett akadálynak számít

# Szenzorok akadályérzékelésre
ps = []
for i in range(8):
    sensor = robot.getDevice('ps' + str(i))
    sensor.enable(TIME_STEP)
    ps.append(sensor)

def detect_obstacle():
    for i in [0, 1, 6, 7]:  # front oldali szenzorok
        if ps[i].getValue() > OBSTACLE_THRESHOLD:
            return True
    return False

# Fő ciklus
while robot.step(TIME_STEP) != -1:
    img = camera.getImage()
    width = camera.getWidth()
    height = camera.getHeight()

    r, g, b = 0, 0, 0
    cx_total = 0
    count = 0

    for y in range(height):
        for x in range(width):
            r = camera.imageGetRed(img, width, x, y)
            g = camera.imageGetGreen(img, width, x, y)
            b = camera.imageGetBlue(img, width, x, y)

            if r > 200 and g < 100 and b < 100:
                cx_total += x
                count += 1

    if count > 0:
        cx = cx_total / count
        offset = (cx - width / 2) / (width / 2)

        if abs(offset) < 0.2:
            if detect_obstacle():
                left_motor.setVelocity(-TURN_SPEED)
                right_motor.setVelocity(TURN_SPEED)
            else:
                left_motor.setVelocity(FORWARD_SPEED)
                right_motor.setVelocity(FORWARD_SPEED)
        elif offset > 0:
            left_motor.setVelocity(TURN_SPEED)
            right_motor.setVelocity(-TURN_SPEED)
        else:
            left_motor.setVelocity(-TURN_SPEED)
            right_motor.setVelocity(TURN_SPEED)
    else:
        left_motor.setVelocity(TURN_SPEED)
        right_motor.setVelocity(-TURN_SPEED)